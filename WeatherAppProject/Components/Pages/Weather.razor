@page "/WeatherData"
@using Microsoft.JSInterop;
@using WeatherAppProject.Services
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime
@inject WeatherService weatherservice 


<PageTitle>Weather</PageTitle>

<h1>Weather</h1>
<button @onclick = "RefreshWidget">Refresh Data</button>
<div>
    <label for="clicked" class="form-label">if it works:</label>
    <input type="text" class="form-control" id="clicked" placeholder="Enter Surname" @bind="clicked"/>
</div>

<div id="openweathermap-widget-15"></div>
<script>
    window.myWidgetParam ? window.myWidgetParam : window.myWidgetParam = [];
    window.myWidgetParam.push({
        id: 15,
        cityid: @cityId,
        appid: @apiKey,
        units: 'metric',
        containerid: 'openweathermap-widget-15',
    });
    (function () {
        var script = document.createElement('script');
        script.async = true;
        script.charset = "utf-8";
        script.src = "//openweathermap.org/themes/openweathermap/assets/vendor/owm/js/weather-widget-generator.js";
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(script, s);
    })();
</script>
<select @bind="cityId">
    <option value="2711537">Stockholm</option>
    <option value="5128581">New York</option>
    <option value="2643743">London</option>
</select>

@code{
    private string clicked;
    private string cityId = "2711537"; // Default city ID (e.g., Stockholm)
    private const string apiKey = "5f547e530c9e01e06ac39e2efeab164c";
    //Hej

    protected override async Task OnInitializedAsync()
    {
        

    }

    private async Task RefreshWidget()
    {
        await JSRuntime.InvokeVoidAsync("loadWeatherWidget",cityId, apiKey);
        clicked = "I've been clicked";
    }

}